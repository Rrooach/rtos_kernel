// AUTOGENERATED FILE
// clang-format off
#include <net_arp.h>
#include <bsp_os.h>
#include <cpu.h>
#include <bsp_gpio.h>
#include <bsp_int.h>
#include <bsp_iomux.h>
#include <bsp_os.h>
#include <bsp_ser.h>
#include <bsp_sys.h>
#include <cpu_core.h>
#include <lib_mem.h>
#include <lib_str.h>
#include <os.h>
#include <net_bsd.h>
#include <net_arp.h>
#include <net_app.h>
#include <net_icmp.h>
#include <net_igmp.h>
#include <net_mldp.h> 
#include <net_def.h>
#include <dhcp-c.h>
#include <net_ndp.h>
#include <net_tcp.h>

#define MAX_ARRAY_LEN 8
#define STRUCT_TYPE_NUM 11


MEM_DYN_POOL mem_dyn_pool[MAX_ARRAY_LEN];
OS_TMR os_tmr[MAX_ARRAY_LEN];
OS_MEM os_mem[MAX_ARRAY_LEN];
MEM_POOL mem_pool[MAX_ARRAY_LEN];
OS_TCB os_tcb[MAX_ARRAY_LEN];
OS_FLAG_GRP os_flag_grp[MAX_ARRAY_LEN];
OS_MUTEX os_mutex[MAX_ARRAY_LEN];
OS_SEM os_sem[MAX_ARRAY_LEN];
OS_Q os_q[MAX_ARRAY_LEN];
MEM_SEG mem_seg[MAX_ARRAY_LEN];
NET_IF net_if[MAX_ARRAY_LEN];


const __UINTPTR_TYPE__ struct_set[STRUCT_TYPE_NUM] = { &mem_dyn_pool, &os_tmr, &os_mem, 
                                    &mem_pool, &os_tcb, &os_flag_grp, 
                                    &os_mutex, &os_sem, &os_q, &mem_seg, 
                                    &net_if};

// const CPU_SIZE_T struct_size[STRUCT_TYPE_NUM] = { sizeof(mem_dyn_pool), sizeof(os_tmr), sizeof(os_mem), 
//                                     sizeof(mem_pool), sizeof(os_tcb), sizeof(os_flag_grp), 
//                                     sizeof(os_mutex), sizeof(os_sem), sizeof(os_q), sizeof(mem_seg), 
//                                     sizeof(net_if)};

const CPU_SIZE_T struct_size[STRUCT_TYPE_NUM] = { sizeof(mem_dyn_pool[0]), sizeof(os_tmr[0]), sizeof(os_mem[0]), sizeof(mem_pool[0]), sizeof(os_tcb[0]), sizeof(os_flag_grp[0]), sizeof(os_mutex[0]), sizeof(os_sem[0]), sizeof(os_q[0]), sizeof(mem_seg[0]), sizeof(net_if[0])};



const call_t syscalls[] = {
    {"DHCPc_ChkStatus", 0, {0, 0, 0, 1, }, (syscall_t)DHCPc_ChkStatus},
    {"DHCPc_GetOptVal", 0, {}, (syscall_t)DHCPc_GetOptVal},
    {"DHCPc_Start", 0, {}, (syscall_t)DHCPc_Start},
    {"DHCPc_Stop", 0, {}, (syscall_t)DHCPc_Stop},
    {"Math_Rand", 0, {}, (syscall_t)Math_Rand},
    {"Math_RandSeed", 0, {}, (syscall_t)Math_RandSeed},
    {"Math_RandSetSeed", 0, {}, (syscall_t)Math_RandSetSeed},
    {"Mem_Clr", 0, {}, (syscall_t)Mem_Clr},
    {"Mem_Cmp", 0, {0, 0, 0, 1, }, (syscall_t)Mem_Cmp},
    {"Mem_Copy", 0, {}, (syscall_t)Mem_Copy},
    {"Mem_DynPoolBlkFree", 0, {}, (syscall_t)Mem_DynPoolBlkFree},
    {"Mem_DynPoolBlkGet", 0, {0, 0, 0, 1, }, (syscall_t)Mem_DynPoolBlkGet},
    {"Mem_DynPoolBlkNbrAvailGet", 0, {0, 0, 0, 1, }, (syscall_t)Mem_DynPoolBlkNbrAvailGet},
    {"Mem_DynPoolCreate", 0, {}, (syscall_t)Mem_DynPoolCreate},
    {"Mem_DynPoolCreateHW", 0, {}, (syscall_t)Mem_DynPoolCreateHW},
    {"Mem_Move", 0, {}, (syscall_t)Mem_Move},
    {"Mem_PoolBlkFree", 0, {}, (syscall_t)Mem_PoolBlkFree},
    {"Mem_PoolBlkGet", 0, {0, 0, 0, 1, }, (syscall_t)Mem_PoolBlkGet},
    {"Mem_PoolBlkGetNbrAvail", 0, {0, 0, 0, 1, }, (syscall_t)Mem_PoolBlkGetNbrAvail},
    {"Mem_PoolClr", 0, {}, (syscall_t)Mem_PoolClr},
    {"Mem_PoolCreate", 0, {}, (syscall_t)Mem_PoolCreate},
    {"Mem_SegAlloc", 0, {0, 0, 0, 1, }, (syscall_t)Mem_SegAlloc},
    {"Mem_SegAllocExt", 0, {0, 0, 0, 1, }, (syscall_t)Mem_SegAllocExt},
    {"Mem_SegAllocHW", 0, {0, 0, 0, 1, }, (syscall_t)Mem_SegAllocHW},
    {"Mem_SegClr", 0, {}, (syscall_t)Mem_SegClr},
    {"Mem_SegCreate", 0, {}, (syscall_t)Mem_SegCreate},
    {"Mem_Set", 0, {}, (syscall_t)Mem_Set},
    {"OSFlagCreate", 0, {}, (syscall_t)OSFlagCreate},
    {"OSFlagDel", 0, {0, 0, 0, 1, }, (syscall_t)OSFlagDel},
    {"OSFlagPend", 0, {}, (syscall_t)OSFlagPend},
    {"OSFlagPendAbort", 0, {0, 0, 0, 1, }, (syscall_t)OSFlagPendAbort},
    {"OSFlagPendGetFlagsRdy", 0, {}, (syscall_t)OSFlagPendGetFlagsRdy},
    {"OSFlagPost", 0, {}, (syscall_t)OSFlagPost},
    {"OSFlagPost$res", 0, {0, 0, 0, 1, }, (syscall_t)OSFlagPost},
    {"OSMemCreate", 0, {}, (syscall_t)OSMemCreate},
    {"OSMemGet", 0, {}, (syscall_t)OSMemGet},
    {"OSMemPut", 0, {}, (syscall_t)OSMemPut},
    {"OSMutexCreate", 0, {}, (syscall_t)OSMutexCreate},
    {"OSMutexDel", 0, {0, 0, 0, 1, }, (syscall_t)OSMutexDel},
    {"OSMutexPend", 0, {}, (syscall_t)OSMutexPend},
    {"OSMutexPendAbort", 0, {0, 0, 0, 1, }, (syscall_t)OSMutexPendAbort},
    {"OSMutexPost", 0, {}, (syscall_t)OSMutexPost},
    {"OSQCreate", 0, {}, (syscall_t)OSQCreate},
    {"OSQDel", 0, {0, 0, 0, 1, }, (syscall_t)OSQDel},
    {"OSQFlush", 0, {0, 0, 0, 1, }, (syscall_t)OSQFlush},
    {"OSQPend", 0, {0, 0, 0, 1, }, (syscall_t)OSQPend},
    {"OSQPendAbort", 0, {0, 0, 0, 1, }, (syscall_t)OSQPendAbort},
    {"OSQPost", 0, {}, (syscall_t)OSQPost},
    {"OSSchedRoundRobinCfg", 0, {}, (syscall_t)OSSchedRoundRobinCfg},
    {"OSSchedRoundRobinYield", 0, {}, (syscall_t)OSSchedRoundRobinYield},
    {"OSSemCreate", 0, {}, (syscall_t)OSSemCreate},
    {"OSSemDel", 0, {0, 0, 0, 1, }, (syscall_t)OSSemDel},
    {"OSSemPend", 0, {0, 0, 0, 1, }, (syscall_t)OSSemPend},
    {"OSSemPendAbort", 0, {0, 0, 0, 1, }, (syscall_t)OSSemPendAbort},
    {"OSSemPost", 0, {0, 0, 0, 1, }, (syscall_t)OSSemPost},
    {"OSSemSet", 0, {}, (syscall_t)OSSemSet},
    {"OSTaskChangePrio", 0, {}, (syscall_t)OSTaskChangePrio},
    {"OSTaskCreate", 0, {}, (syscall_t)OSTaskCreate},
    {"OSTaskCreateHook", 0, {}, (syscall_t)OSTaskCreateHook},
    {"OSTaskDel", 0, {}, (syscall_t)OSTaskDel},
    {"OSTaskDelHook", 0, {}, (syscall_t)OSTaskDelHook},
    {"OSTaskQFlush", 0, {0, 0, 0, 1, }, (syscall_t)OSTaskQFlush},
    {"OSTaskQPend", 0, {0, 0, 0, 1, }, (syscall_t)OSTaskQPend},
    {"OSTaskQPendAbort", 0, {0, 0, 0, 1, }, (syscall_t)OSTaskQPendAbort},
    {"OSTaskQPost", 0, {}, (syscall_t)OSTaskQPost},
    {"OSTaskRegGet", 0, {0, 0, 0, 1, }, (syscall_t)OSTaskRegGet},
    {"OSTaskRegGetID", 0, {}, (syscall_t)OSTaskRegGetID},
    {"OSTaskRegSet", 0, {}, (syscall_t)OSTaskRegSet},
    {"OSTaskResume", 0, {}, (syscall_t)OSTaskResume},
    {"OSTaskReturnHook", 0, {}, (syscall_t)OSTaskReturnHook},
    {"OSTaskSemPend", 0, {0, 0, 0, 1, }, (syscall_t)OSTaskSemPend},
    {"OSTaskSemPendAbort", 0, {0, 0, 0, 1, }, (syscall_t)OSTaskSemPendAbort},
    {"OSTaskSemPost", 0, {0, 0, 0, 1, }, (syscall_t)OSTaskSemPost},
    {"OSTaskSemSet", 0, {}, (syscall_t)OSTaskSemSet},
    {"OSTaskSuspend", 0, {}, (syscall_t)OSTaskSuspend},
    {"OSTaskSwHook", 0, {}, (syscall_t)OSTaskSwHook},
    {"OSTaskTimeQuantaSet", 0, {}, (syscall_t)OSTaskTimeQuantaSet},
    {"OSTimeSet", 0, {}, (syscall_t)OSTimeSet},
    {"OSTimeTick", 0, {}, (syscall_t)OSTimeTick},
    {"OSTimeTickHook", 0, {}, (syscall_t)OSTimeTickHook},
    {"OSTmrCreate", 0, {}, (syscall_t)OSTmrCreate},
    {"OSTmrDel", 0, {0, 0, 0, 1, }, (syscall_t)OSTmrDel},
    {"OSTmrSet", 0, {}, (syscall_t)OSTmrSet},
    {"OSTmrStart", 0, {0, 0, 0, 1, }, (syscall_t)OSTmrStart},
    {"OSTmrStateGet", 0, {0, 0, 0, 1, }, (syscall_t)OSTmrStateGet},
    {"OSTmrStop", 0, {0, 0, 0, 1, }, (syscall_t)OSTmrStop},
    {"Str_Cat", 0, {}, (syscall_t)Str_Cat},
    {"Str_Cat$res", 0, {}, (syscall_t)Str_Cat},
    {"Str_Cat$res1", 0, {}, (syscall_t)Str_Cat},
    {"Str_Cat_N", 0, {}, (syscall_t)Str_Cat_N},
    {"Str_Cat_N$res", 0, {}, (syscall_t)Str_Cat_N},
    {"Str_Cat_N$res1", 0, {}, (syscall_t)Str_Cat_N},
    {"Str_Char", 0, {}, (syscall_t)Str_Char},
    {"Str_Char$res", 0, {}, (syscall_t)Str_Char},
    {"Str_Char_Last", 0, {}, (syscall_t)Str_Char_Last},
    {"Str_Char_Last_N", 0, {}, (syscall_t)Str_Char_Last_N},
    {"Str_Char_N", 0, {}, (syscall_t)Str_Char_N},
    {"Str_Char_Replace", 0, {}, (syscall_t)Str_Char_Replace},
    {"Str_Char_Replace_N", 0, {}, (syscall_t)Str_Char_Replace_N},
    {"Str_Cmp", 0, {0, 0, 0, 1, }, (syscall_t)Str_Cmp},
    {"Str_Cmp$res", 0, {0, 0, 0, 1, }, (syscall_t)Str_Cmp},
    {"Str_Cmp$res1", 0, {0, 0, 0, 1, }, (syscall_t)Str_Cmp},
    {"Str_CmpIgnoreCase", 0, {0, 0, 0, 1, }, (syscall_t)Str_CmpIgnoreCase},
    {"Str_CmpIgnoreCase$res", 0, {0, 0, 0, 1, }, (syscall_t)Str_CmpIgnoreCase},
    {"Str_CmpIgnoreCase$res1", 0, {0, 0, 0, 1, }, (syscall_t)Str_CmpIgnoreCase},
    {"Str_CmpIgnoreCase_N", 0, {0, 0, 0, 1, }, (syscall_t)Str_CmpIgnoreCase_N},
    {"Str_CmpIgnoreCase_N$res", 0, {0, 0, 0, 1, }, (syscall_t)Str_CmpIgnoreCase_N},
    {"Str_CmpIgnoreCase_N$res1", 0, {0, 0, 0, 1, }, (syscall_t)Str_CmpIgnoreCase_N},
    {"Str_Cmp_N", 0, {0, 0, 0, 1, }, (syscall_t)Str_Cmp_N},
    {"Str_Cmp_N$res", 0, {0, 0, 0, 1, }, (syscall_t)Str_Cmp_N},
    {"Str_Cmp_N$res1", 0, {0, 0, 0, 1, }, (syscall_t)Str_Cmp_N},
    {"Str_Copy", 0, {}, (syscall_t)Str_Copy},
    {"Str_Copy$res", 0, {}, (syscall_t)Str_Copy},
    {"Str_Copy_N", 0, {}, (syscall_t)Str_Copy_N},
    {"Str_Copy_N$res", 0, {}, (syscall_t)Str_Copy_N},
    {"Str_FmtNbr_Int32S", 0, {}, (syscall_t)Str_FmtNbr_Int32S},
    {"Str_FmtNbr_Int32U", 0, {}, (syscall_t)Str_FmtNbr_Int32U},
    {"Str_Len", 0, {0, 0, 0, 1, }, (syscall_t)Str_Len},
    {"Str_Len_N", 0, {0, 0, 0, 1, }, (syscall_t)Str_Len_N},
    {"Str_ParseNbr_Int32S", 0, {0, 0, 0, 1, }, (syscall_t)Str_ParseNbr_Int32S},
    {"Str_ParseNbr_Int32U", 0, {0, 0, 0, 1, }, (syscall_t)Str_ParseNbr_Int32U},
    {"Str_Str", 0, {}, (syscall_t)Str_Str},
    {"Str_Str$res", 0, {}, (syscall_t)Str_Str},
    {"Str_Str$res1", 0, {}, (syscall_t)Str_Str},
    {"Str_Str_N", 0, {}, (syscall_t)Str_Str_N},
    {"Str_Str_N$res", 0, {}, (syscall_t)Str_Str_N},
    {"Str_Str_N$res1", 0, {}, (syscall_t)Str_Str_N},
};